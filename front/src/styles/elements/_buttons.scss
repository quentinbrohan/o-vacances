@import 'src/styles/vars';
// Settings
// Buttons & Forms
// $button-form--height: 			3rem;		// height of buttons & forms
$button-form--height: 2.5rem; // height of buttons & forms
$button-form-sm--height: 2.25rem; // height of buttons & forms (small)
$button-form--border-width: 0.16rem; // border width (if you wish not to display any border, just set colors to null instead of changing this value)
$button-form--border-style: solid; // border style
$button-form--group-padding: 0.75rem; // padding separating input from button in a form group (.form-group). Prefer null over 0

// Buttons: text color
$button--color: (
  button-light: $primaryColor,
  button-dark: $primaryColorDarker,
  button-primary: $primaryColorLighter,
  button-secondary: $whiteColor,
  button-disabled: $primaryColorDarker,
);

// Buttons: background color
$button--bg: (
  button-light: $primaryColorLighter,
  button-light-hover: lighten($primaryColorLighter, 16%),
  button-dark: $primaryColorDarker,
  button-dark-hover: lighten($primaryColorDarker, 6%),
  button-primary: $primaryColor,
  button-primary-hover: lighten($primaryColor, 6%),
  button-secondary: $greyColorDarker,
  button-secondary-hover: lighten($greyColorDarker, 6%),
  button-disabled: $greyColor,
);

// Buttons: border color
$button--border: (
  button-light: transparent,
  // button-light is default (.button), so if it's transparent you can set all other values to null
  button-light-hover: null,
  button-dark: null,
  button-dark-hover: null,
  button-primary: null,
  button-primary-hover: null,
  button-secondary: null,
  button-secondary-hover: null,
  button-disabled: null,
);

// Buttons: font size
$button--size: (
  button: 1rem,
);

// Buttons: font weight
$button--weight: (
  button: 600,
);

// More buttons settings
$button--padding-h: 2rem; // button, left & right padding
$button-sm--padding-h: 1.5rem; // button (small), left & right padding
$button-w-form--padding-h: 1.5rem; // button, left & right padding in a form group (.form-group) - Overrides button default padding
$button-sm-w-form--padding-h: null; // button (small), left & right padding in a form group (.form-group) - Overrides button default padding
$button--radius: 0.25rem; // button radius (never use null)
$button--transform: uppercase; // button text-transform property (null is allowed)
$button--max-size-mobile: 17, 5rem; // button max width on mobile (.button-wide-mobile)
$button-group-padding: 1rem; // padding between sibling buttons (nested into .button-group)
$button-loading--thickness: 2px; // button loading spinner, stroke width (.button.is-loading)

// Forms: color
$form--color: (
  input: $greyColorLighter,
  input-placeholder: $greyColorLighter,
  label: $greyColorLighter,
  check-radio: $greyColorLighter,
);

// Forms: background color
$form--bg: (
  input: transparent,
  input-focus: null,
  input-disabled: $greyColorDarker,
  check-radio-checked: $primaryColor,
  switch: $greyColorDarker,
  switch-checked: $primaryColor,
);

// Forms: border color
$form--border: (
  input: $greyColorDarker,
  input-hover: $greyColorLighter,
  input-focus: $primaryColor,
  input-disabled: $greyColorLighter,
);

// Forms: background color
$form--icon: (
  select-arrow: $greyColorLighter,
);

// Forms: font size
$form--size: (
  input: 1rem,
  label: 1.2rem,
  check-radio: 1rem,
  hint: 0.8rem,
);

// Forms: font weight
$form--weight: (
  input: null,
  label: 600,
  check-radio: null,
);

// More forms settings
$form--padding-h: 1rem; // form, inner left & right padding
$form-sm--padding-h: 0.75rem; // form (small), inner left & right padding
$form--radius: 0; // form radius (never use null)
$form-hint--margin: 0.5rem; // .form-hint top margin

// Styles
button,
.button {
  display: inline-flex;
  font-size: 1rem;
  font-weight: 600;
  // padding: (($button-form--height - 1 - ($button-form--border-width * 2)) / 2)
  //   ($button--padding-h - $button-form--border-width);
  margin: 0.25rem 0;
  height: $button-form--height;
  text-decoration: none !important;
  // text-transform: $button--transform;
  color: $blackColor;
  background-color: $primaryColorLighter;
  border-width: $button-form--border-width;
  border-style: $button-form--border-style;
  border-color: $primaryColorLighter;
  border-radius: $button--radius;
  cursor: pointer;
  justify-content: center;
  align-items: center;
  text-align: center;
  letter-spacing: inherit;
  white-space: nowrap;
  @include transitionFast;
  //
  box-shadow: 0 0.5rem 1rem rgba($primaryColorDarker, 0.12);
  > a {
    display: flex;
    justify-content: center;
    align-items: center;
    height: $button-form--height;
    padding: (($button-form--height - 1 - ($button-form--border-width * 2)) / 2)
      ($button--padding-h - $button-form--border-width);
    svg {
      margin: 0 0.5rem;
    }
  }

  &:not(.button-dark):not(.button-primary):not(.button-secondary):not(.rdrCalendarWrapper > *) {
    background: linear-gradient(
      65deg,
      $primaryColorLighter 0,
      rgba($primaryColorLighter, 0.8) 100%
    );
    background-origin: border-box;

    &:hover {
      background-color: lighten($primaryColorLighter, 16%);
    }
  }

  &:active {
    outline: 0;
  }

  &:hover {
    background-color: lighten($primaryColorLighter, 16%);
    border-color: lighten($primaryColorLighter, 16%);
    transform: translateY(-2px);
    box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.3);
  }

  &.back {
    position: absolute;
    top: 5.5rem;
  }

  &.inline {
    margin-left: 0.5rem;
  }

  &.is-loading {
    position: relative;
    color: transparent !important;
    pointer-events: none;

    &::after {
      content: '';
      display: block;
      position: absolute;
      width: 1rem;
      height: 1rem;
      margin-left: -(1rem / 2);
      margin-top: -(1rem / 2);
      top: 50%;
      left: 50%;
      border: $button-loading--thickness solid $primaryColorLighter;
      border-radius: 50%;
      border-color: $blackColor !important;
      border-right-color: transparent !important;
      border-top-color: transparent !important;
      z-index: 1;
      animation: button-loading 0.6s infinite linear;
    }
  }

  &[disabled] {
    cursor: not-allowed;
    // color: $greyColor;
    background-color: $greyColor !important;
    border-color: $greyColor;

    &.is-loading {
      &::after {
        border-color: $greyColor;
      }
    }
  }
}

.button-sm {
  padding: (($button-form-sm--height - 1 - ($button-form--border-width * 2)) / 2)
    ($button-sm--padding-h - $button-form--border-width);
  height: $button-form-sm--height;
}

.button-dark {
  color: $blackColor;
  background-color: $primaryColorDarker;
  border-color: $primaryColorDarker;

  &:hover {
    background-color: lighten($primaryColorDarker, 6%);
    border-color: lighten($primaryColorDarker, 6%);
  }

  &.is-loading {
    &::after {
      border-color: $primaryColorDarker;
    }
  }
}

.button-primary {
  color: $blackColor;
  background-color: $primaryColor;
  border-color: $primaryColor;

  &:hover {
    background-color: lighten($primaryColor, 6%);
    border-color: lighten($primaryColor, 6%);
  }

  &.is-loading {
    &::after {
      border-color: $primaryColor;
    }
  }
}

.button-delete {
  color: $whiteColor;
  background-color: $errorColor;
  border-color: $errorColor;

  &:hover {
    background-color: lighten($errorColor, 6%);
    border-color: lighten($errorColor, 6%);
  }

  &.is-loading {
    &::after {
      border-color: $errorColor;
    }
  }
}

.button-secondary {
  color: $blackColor;
  background-color: $whiteColor;
  border-color: $whiteColor;
  box-shadow: 0 0.25rem 0.25rem rgba($blackColor, 0.15);

  &:hover {
    background-color: lighten($whiteColor, 6%);
    border-color: lighten($whiteColor, 6%);
  }

  &.is-loading {
    &::after {
      border-color: $whiteColor;
    }
  }
}

.button-block {
  display: flex;
  width: 100%;
}

.button-group {
  display: flex;
  flex-wrap: wrap;
  align-items: center;
  margin-right: -($button-group-padding / 2);
  margin-left: -($button-group-padding / 2);
  margin-top: -($button-group-padding / 2);

  &:last-of-type {
    margin-bottom: -($button-group-padding / 2);
  }

  &:not(:last-of-type) {
    margin-bottom: ($button-group-padding / 2);
  }

  > [class*='button'] {
    margin: $button-group-padding / 2;
  }
}

@media (max-width: $lg-mobile) {
  .button-wide-mobile {
    width: 100%;
    max-width: $button--max-size-mobile;
  }
}

@keyframes button-loading {
  0% {
    transform: rotate(0);
  }

  100% {
    transform: rotate(360deg);
  }
}
